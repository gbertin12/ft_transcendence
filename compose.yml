services:
    front:
        build: ./app/front
        env_file:
            - ./env/front.env
        volumes:
            - front:/app
        ports:
            - 8000:3000
        networks:
            - front
        healthcheck:
            test: [ "CMD-SHELL", "curl http://127.0.0.1:3000/ || exit 1" ]
            interval: 30s
            timeout: 30s
            retries: 5
            start_period: 90s
        depends_on:
            back:
                condition: service_healthy

    back:
        build: ./app/back
        env_file:
            - ./env/back.env
        volumes:
            - back:/app
        ports:
            - 3000:3000
            - 8001:8001
        networks:
            - front
            - back
        healthcheck:
            test: [ "CMD-SHELL", "curl http://127.0.0.1:3000/ || exit 1" ]
            interval: 2s
            timeout: 30s
            retries: 10
            start_period: 6s
        depends_on:
            db:
                condition: service_healthy

    db:
        image: postgres:15-alpine
        env_file:
            - ./env/db.env
        networks:
            - back
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -U postgres" ]
            interval: 1s
            timeout: 5s
            retries: 5
            start_period: 5s
        ports:
            - 5432:5432

volumes:
    back:
        driver: local
        name: back
        driver_opts:
            type: none
            device: "${PWD}/app/back"
            o: bind
    front:
        driver: local
        name: front
        driver_opts:
            type: none
            device: "${PWD}/app/front"
            o: bind

networks:
    front:
    back:
